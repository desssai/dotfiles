(include "./sources/docker.yuck")
(include "./sources/network.yuck")
(include "./sources/sound-input.yuck")
(include "./sources/sound-output.yuck")
(include "./sources/power.yuck")
(include "./sources/bluetooth.yuck")
(include "./sources/calendar.yuck")
(include "./sources/spotlight.yuck")
(include "./sources/control-center.yuck")

(defwindow  bar
            :monitor 0
            :geometry (geometry :x "0px" :y "0px" :width "100%" :height "30px" :anchor "top center")
            :stacking "fg"
            :exclusive false
            :focusable false
            :namespace "eww-bar"
            (bar)
)

(defwidget  bar []
  (centerbox  :orientation "h"
              (global-menu)
              (workspaces)
              (controls)
  )
)

(defvar title-active "")

(defwidget  global-menu []
  (box  :class "bar-start-item"
        :halign "start"
        :valign "center"
        :space-evenly false
        (box      :class "logo-box"
                  (eventbox :class "os-icon"
                            :width 30
                            :height 30
                            (label :text "󰀵")
                  )
        )
        (eventbox :class "menu-item"
                  title-active
        )
  )
)

(defvar spaces-total-json `[{"id":1,"name":""}]`)
(defvar space-active-json `{"id":1,"name":""}`)

(defwidget workspaces []
  (box  :class "bar-center-item"
        :halign "center"
        :valign "center"
        :space-evenly false
        :spacing 8
        (for space in spaces-total-json
          (workspace :space space :active-space space-active-json)
        )
  )
)

(defwidget  workspace [space active-space]
  (eventbox :class {jq(space-active-json, "[.id]") == jq(space, "[.id]") ? "workspace workspace-active" : "workspace workspace-inactive"}
            :width {jq(space-active-json, "[.id]") == jq(space, "[.id]") ? 32 : 16}
            :height 16
            :onclick {"hyprctl dispatch workspace " + space.id}
  )
)

(defwidget  controls []
  (box  :class "bar-end-item"
        :halign "end"
        :valign "center"
        :space-evenly false
        (docker-icon)
        (sound-input-icon)
        (sound-output-icon)
        (bluetooth-icon)
        (power-icon)
        (network-icon)
        (spotlight-icon)
        (control-center-icon)
        (calendar-icon)
  )
)
;;       󰦔  󰑫  
